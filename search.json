[{"path":"https://mlr3oml.mlr-org.com/LICENSE.html","id":"gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"GNU LESSER GENERAL PUBLIC LICENSE","title":"NA","text":"Version 2.1, February 1999","code":"Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.  [This is the first released version of the Lesser GPL.  It also counts  as the successor of the GNU Library Public License, version 2, hence  the version number 2.1.]"},{"path":"https://mlr3oml.mlr-org.com/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"licenses software designed take away freedom share change . contrast, GNU General Public Licenses intended guarantee freedom share change free software–make sure software free users. license, Lesser General Public License, applies specially designated software packages–typically libraries–Free Software Foundation authors decide use . can use , suggest first think carefully whether license ordinary General Public License better strategy use particular case, based explanations . speak free software, referring freedom use, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish); receive source code can get want ; can change software use pieces new free programs; informed can things. protect rights, need make restrictions forbid distributors deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies library modify . example, distribute copies library, whether gratis fee, must give recipients rights gave . must make sure , , receive can get source code. link code library, must provide complete object files recipients, can relink library making changes library recompiling . must show terms know rights. protect rights two-step method: (1) copyright library, (2) offer license, gives legal permission copy, distribute /modify library. protect distributor, want make clear warranty free library. Also, library modified someone else passed , recipients know original version, original author’s reputation affected problems might introduced others. Finally, software patents pose constant threat existence free program. wish make sure company effectively restrict users free program obtaining restrictive license patent holder. Therefore, insist patent license obtained version library must consistent full freedom use specified license. GNU software, including libraries, covered ordinary GNU General Public License. license, GNU Lesser General Public License, applies certain designated libraries, quite different ordinary General Public License. use license certain libraries order permit linking libraries non-free programs. program linked library, whether statically using shared library, combination two legally speaking combined work, derivative original library. ordinary General Public License therefore permits linking entire combination fits criteria freedom. Lesser General Public License permits lax criteria linking code library. call license “Lesser” General Public License Less protect user’s freedom ordinary General Public License. also provides free software developers Less advantage competing non-free programs. disadvantages reason use ordinary General Public License many libraries. However, Lesser license provides advantages certain special circumstances. example, rare occasions, may special need encourage widest possible use certain library, becomes de-facto standard. achieve , non-free programs must allowed use library. frequent case free library job widely used non-free libraries. case, little gain limiting free library free software , use Lesser General Public License. cases, permission use particular library non-free programs enables greater number people use large body free software. example, permission use GNU C Library non-free programs enables many people use whole GNU operating system, well variant, GNU/Linux operating system. Although Lesser General Public License Less protective users’ freedom, ensure user program linked Library freedom wherewithal run program using modified version Library. precise terms conditions copying, distribution modification follow. Pay close attention difference “work based library” “work uses library”. former contains code derived library, whereas latter must combined library order run.","code":""},{"path":"https://mlr3oml.mlr-org.com/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"NA","text":"0. License Agreement applies software library program contains notice placed copyright holder authorized party saying may distributed terms Lesser General Public License (also called “License”). licensee addressed “”. “library” means collection software functions /data prepared conveniently linked application programs (use functions data) form executables. “Library”, , refers software library work distributed terms. “work based Library” means either Library derivative work copyright law: say, work containing Library portion , either verbatim modifications /translated straightforwardly another language. (Hereinafter, translation included without limitation term “modification”.) “Source code” work means preferred form work making modifications . library, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation library. Activities copying, distribution modification covered License; outside scope. act running program using Library restricted, output program covered contents constitute work based Library (independent use Library tool writing ). Whether true depends Library program uses Library . 1. may copy distribute verbatim copies Library’s complete source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; distribute copy License along Library. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Library portion , thus forming work based Library, copy distribute modifications work terms Section 1 , provided also meet conditions: ) modified work must software library. b) must cause files modified carry prominent notices stating changed files date change. c) must cause whole work licensed charge third parties terms License. d) facility modified Library refers function table data supplied application program uses facility, argument passed facility invoked, must make good faith effort ensure , event application supply function table, facility still operates, performs whatever part purpose remains meaningful. (example, function library compute square roots purpose entirely well-defined independent application. Therefore, Subsection 2d requires application-supplied function table used function must optional: application supply , square root function must still compute square roots.) requirements apply modified work whole. identifiable sections work derived Library, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Library, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Library. addition, mere aggregation another work based Library Library (work based Library) volume storage distribution medium bring work scope License. 3. may opt apply terms ordinary GNU General Public License instead License given copy Library. , must alter notices refer License, refer ordinary GNU General Public License, version 2, instead License. (newer version version 2 ordinary GNU General Public License appeared, can specify version instead wish.) make change notices. change made given copy, irreversible copy, ordinary GNU General Public License applies subsequent copies derivative works made copy. option useful wish copy part code Library program library. 4. may copy distribute Library (portion derivative , Section 2) object code executable form terms Sections 1 2 provided accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange. distribution object code made offering access copy designated place, offering equivalent access copy source code place satisfies requirement distribute source code, even though third parties compelled copy source along object code. 5. program contains derivative portion Library, designed work Library compiled linked , called “work uses Library”. work, isolation, derivative work Library, therefore falls outside scope License. However, linking “work uses Library” Library creates executable derivative Library (contains portions Library), rather “work uses library”. executable therefore covered License. Section 6 states terms distribution executables. “work uses Library” uses material header file part Library, object code work may derivative work Library even though source code . Whether true especially significant work can linked without Library, work library. threshold true precisely defined law. object file uses numerical parameters, data structure layouts accessors, small macros small inline functions (ten lines less length), use object file unrestricted, regardless whether legally derivative work. (Executables containing object code plus portions Library still fall Section 6.) Otherwise, work derivative Library, may distribute object code work terms Section 6. executables containing work also fall Section 6, whether linked directly Library . 6. exception Sections , may also combine link “work uses Library” Library produce work containing portions Library, distribute work terms choice, provided terms permit modification work customer’s use reverse engineering debugging modifications. must give prominent notice copy work Library used Library use covered License. must supply copy License. work execution displays copyright notices, must include copyright notice Library among , well reference directing user copy License. Also, must one things: ) Accompany work complete corresponding machine-readable source code Library including whatever changes used work (must distributed Sections 1 2 ); , work executable linked Library, complete machine-readable “work uses Library”, object code /source code, user can modify Library relink produce modified executable containing modified Library. (understood user changes contents definitions files Library necessarily able recompile application use modified definitions.) b) Use suitable shared library mechanism linking Library. suitable mechanism one (1) uses run time copy library already present user’s computer system, rather copying library functions executable, (2) operate properly modified version library, user installs one, long modified version interface-compatible version work made . c) Accompany work written offer, valid least three years, give user materials specified Subsection 6a, , charge cost performing distribution. d) distribution work made offering access copy designated place, offer equivalent access copy specified materials place. e) Verify user already received copy materials already sent user copy. executable, required form “work uses Library” must include data utility programs needed reproducing executable . However, special exception, materials distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. may happen requirement contradicts license restrictions proprietary libraries normally accompany operating system. contradiction means use Library together executable distribute. 7. may place library facilities work based Library side--side single library together library facilities covered License, distribute combined library, provided separate distribution work based Library library facilities otherwise permitted, provided two things: ) Accompany combined library copy work based Library, uncombined library facilities. must distributed terms Sections . b) Give prominent notice combined library fact part work based Library, explaining find accompanying uncombined form work. 8. may copy, modify, sublicense, link , distribute Library except expressly provided License. attempt otherwise copy, modify, sublicense, link , distribute Library void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 9. required accept License, since signed . However, nothing else grants permission modify distribute Library derivative works. actions prohibited law accept License. Therefore, modifying distributing Library (work based Library), indicate acceptance License , terms conditions copying, distributing modifying Library works based . 10. time redistribute Library (work based Library), recipient automatically receives license original licensor copy, distribute, link modify Library subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 11. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Library . example, patent license permit royalty-free redistribution Library receive copies directly indirectly , way satisfy License refrain entirely distribution Library. portion section held invalid unenforceable particular circumstance, balance section intended apply, section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 12. distribution /use Library restricted certain countries either patents copyrighted interfaces, original copyright holder places Library License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 13. Free Software Foundation may publish revised /new versions Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Library specify license version number, may choose version ever published Free Software Foundation. 14. wish incorporate parts Library free programs whose distribution conditions incompatible , write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally. WARRANTY 15. LIBRARY LICENSED FREE CHARGE, WARRANTY LIBRARY, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE LIBRARY “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE LIBRARY . LIBRARY PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 16. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE LIBRARY PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE LIBRARY (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE LIBRARY OPERATE SOFTWARE), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-libraries","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Libraries","title":"NA","text":"develop new library, want greatest possible use public, recommend making free software everyone can redistribute change. can permitting redistribution terms (, alternatively, terms ordinary General Public License). apply terms, attach following notices library. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. also get employer (work programmer) school, , sign “copyright disclaimer” library, necessary. sample; alter names: ’s !","code":"one line to give the library's name and an idea of what it does. Copyright (C) year  name of author  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.  signature of Ty Coon, 1 April 1990 Ty Coon, President of Vice"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"mlr3oml","dir":"Articles","previous_headings":"","what":"mlr3oml","title":"Getting Started","text":"tutorial give quick overview main features mlr3oml. familiar OpenML, recommend read documentation first, explain OpenML concepts detail . coverage selected mlr3oml features can found Large-Scale Benchmarking chapter mlr3book. Note mlr3oml currently supports downloading objects OpenML. Uploading can example achieved website. First, briefly cover different OpenML objects can downloaded using mlr3oml. show find objects certain properties OpenML. Finally, quickly discuss aspects mlr3oml, includes caching, file formats, laziness, logger, API key.","code":""},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"sec-objects","dir":"Articles","previous_headings":"mlr3oml","what":"OpenML Objects","title":"Getting Started","text":"mlr3oml supports five different types OpenML objects listed . objects can converted corresponding mlr3 pandeaunt. OMLData represents OpenML dataset. (usually tabular) sets additional meta-data, includes e.g. description dataset license. similar mlr3 class mlr3::DataBackend. OMLTask represents OpenML task. concrete problem speficiation top OpenML dataset. similar mlr3::Task objects, major difference OpenML task also contains resampling splits can therefore also converted mlr3::Resampling. OMLFlow represents OpenML flow. reusable executable representation machine learning pipeline workflow. closest mlr3 class Learner. OMLRun represents OpenML run. OpenML run refers execution specific machine learning flow particular task, recording relevant information hyperparameters, performance metrics, intermediate results. similar mlr3::ResampleResult object. OMLCollection represents OpenML collection, can either run collection task collection. container objects allow bundle tasks (resulting benchmarking suites) runs (can used represent benchmark experiments). mlr3 pendant former (list tasks), latter correspond mlr3::BenchmarkResult. object OpenML unique identifier, can retrieved. now briefly show access work objects.","code":""},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"data","dir":"Articles","previous_headings":"mlr3oml > OpenML Objects","what":"Data","title":"Getting Started","text":", retrieve dataset ID 31, credit-g data can viewed online . Like mlr3 packages, sugar functions exist construction R6 classes. always show ways construct objects. full meta data can accessed using $desc field. fields, number rows columns can accessed directly. Information features can accessed $features field. includes information regarding data types, missing values, whether ignored learning whether row identifier. data can accessed using $data field. show subset data readability. can convert object mlr3::DataBackend using as_data_backend() function. specific dataset default target meta data, can also directly convert mlr3::Task. either backend task, now mlr3 land , can work objects usual:","code":"library(mlr3oml) library(mlr3)  oml_data = OMLData$new(id = 31) # is the same as oml_data = odt(id = 31) oml_data ## <OMLData:31:credit-g> (1000x21) ##  * Default target: class # the usage licence oml_data$desc$licence ## [1] \"Public\" # the data dimension c(n_rows = oml_data$nrow, n_cols = oml_data$ncol) ## n_rows n_cols  ##   1000     21 head(oml_data$features) ## Key: <index> ##    index            name data_type ##    <int>          <char>    <fctr> ## 1:     0 checking_status   nominal ## 2:     1        duration   numeric ## 3:     2  credit_history   nominal ## 4:     3         purpose   nominal ## 5:     4   credit_amount   numeric ## 6:     5  savings_status   nominal ##                                                                                   nominal_value ##                                                                                          <list> ## 1:                                                                0<=X<200,<0,>=200,no checking ## 2:                                                                                              ## 3: all paid,critical/other existing credit,delayed previously,existing paid,no credits/all paid ## 4:                  business,domestic appliance,education,furniture/equipment,new car,other,... ## 5:                                                                                              ## 6:                                          100<=X<500,500<=X<1000,<100,>=1000,no known savings ##    is_target is_ignore is_row_identifier number_of_missing_values ##       <lgcl>    <lgcl>            <lgcl>                    <int> ## 1:     FALSE     FALSE             FALSE                        0 ## 2:     FALSE     FALSE             FALSE                        0 ## 3:     FALSE     FALSE             FALSE                        0 ## 4:     FALSE     FALSE             FALSE                        0 ## 5:     FALSE     FALSE             FALSE                        0 ## 6:     FALSE     FALSE             FALSE                        0 oml_data$data[1:5, 1:3] ##    checking_status duration                 credit_history ##             <fctr>    <int>                         <fctr> ## 1:              <0        6 critical/other existing credit ## 2:        0<=X<200       48                  existing paid ## 3:     no checking       12 critical/other existing credit ## 4:              <0       42                  existing paid ## 5:              <0       24             delayed previously backend = as_data_backend(oml_data) backend ## <DataBackendDataTable> (1000x22) ##  checking_status duration                 credit_history             purpose ##           <fctr>    <int>                         <fctr>              <fctr> ##               <0        6 critical/other existing credit            radio/tv ##         0<=X<200       48                  existing paid            radio/tv ##      no checking       12 critical/other existing credit           education ##               <0       42                  existing paid furniture/equipment ##               <0       24             delayed previously             new car ##      no checking       36                  existing paid           education ##  credit_amount   savings_status employment installment_commitment ##          <int>           <fctr>     <fctr>                  <int> ##           1169 no known savings        >=7                      4 ##           5951             <100     1<=X<4                      2 ##           2096             <100     4<=X<7                      2 ##           7882             <100     4<=X<7                      2 ##           4870             <100     1<=X<4                      3 ##           9055 no known savings     1<=X<4                      2 ##     personal_status other_parties residence_since property_magnitude   age ##              <fctr>        <fctr>           <int>             <fctr> <int> ##         male single          none               4        real estate    67 ##  female div/dep/mar          none               2        real estate    22 ##         male single          none               3        real estate    49 ##         male single     guarantor               4     life insurance    45 ##         male single          none               4  no known property    53 ##         male single          none               4  no known property    35 ##  other_payment_plans  housing existing_credits                job ##               <fctr>   <fctr>            <int>             <fctr> ##                 none      own                2            skilled ##                 none      own                1            skilled ##                 none      own                1 unskilled resident ##                 none for free                1            skilled ##                 none for free                2            skilled ##                 none for free                1 unskilled resident ##  num_dependents own_telephone foreign_worker  class ..row_id ##           <int>        <fctr>         <fctr> <fctr>    <int> ##               1           yes            yes   good        1 ##               1          none            yes    bad        2 ##               2          none            yes   good        3 ##               2          none            yes   good        4 ##               2          none            yes    bad        5 ##               2           yes            yes   good        6 ## [...] (994 rows omitted) # the default target oml_data$target_names ## [1] \"class\" # convert the OpenML data to an mlr3 task task = as_task(oml_data) rr = resample(task, lrn(\"classif.rpart\"), rsmp(\"holdout\"))"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"task","dir":"Articles","previous_headings":"mlr3oml > OpenML Objects","what":"Task","title":"Getting Started","text":", access OpenML task ID 261, classification task built top credit-g data used . associated resampling 2/3 holdout split. OpenML data task built top can accessed $data. can also access target columns features. Note target can differ default target shown previous section. associated resampling splits can accessed using $task_splits. conversion mlr3::Task possible using as_task() converter. associated resampling can obtained calling as_resampling(). simplify , exist \"oml\" tasks resamplings:","code":"oml_task = OMLTask$new(id = 261) # is the same as oml_task = otsk(id = 261) oml_task ## <OMLTask:261> ##  * Type: Supervised Classification ##  * Data: credit-g (id: 31; dim: 1000x21) ##  * Target: class ##  * Estimation: holdout (id: 6; test size: 33%) oml_task$data ## <OMLData:31:credit-g> (1000x21) ##  * Default target: class oml_task$target_names ## [1] \"class\" oml_task$feature_names ##  [1] \"checking_status\"        \"duration\"               \"credit_history\"         ##  [4] \"purpose\"                \"credit_amount\"          \"savings_status\"         ##  [7] \"employment\"             \"installment_commitment\" \"personal_status\"        ## [10] \"other_parties\"          \"residence_since\"        \"property_magnitude\"     ## [13] \"age\"                    \"other_payment_plans\"    \"housing\"                ## [16] \"existing_credits\"       \"job\"                    \"num_dependents\"         ## [19] \"own_telephone\"          \"foreign_worker\" oml_task$task_splits ##         type rowid repeat.  fold ##       <fctr> <int>   <int> <int> ##    1:   TEST   490       0     0 ##    2:   TEST   539       0     0 ##    3:   TEST   694       0     0 ##    4:   TEST   646       0     0 ##    5:   TEST   150       0     0 ##   ---                            ##  996:  TRAIN   875       0     0 ##  997:  TRAIN   549       0     0 ##  998:  TRAIN   195       0     0 ##  999:  TRAIN   241       0     0 ## 1000:  TRAIN   360       0     0 # Convert OpenML task to mlr3 task task = as_task(oml_task) task ## <TaskClassif:credit-g> (1000 x 21) ## * Target: class ## * Properties: twoclass ## * Features (20): ##   - fct (13): checking_status, credit_history, employment, ##     foreign_worker, housing, job, other_parties, other_payment_plans, ##     own_telephone, personal_status, property_magnitude, purpose, ##     savings_status ##   - int (7): age, credit_amount, duration, existing_credits, ##     installment_commitment, num_dependents, residence_since # Convert OpenML task to mlr3 resampling resampling = as_resampling(oml_task) resampling ## <ResamplingCustom>: Custom Splits ## * Iterations: 1 ## * Instantiated: TRUE ## * Parameters: list() tsk(\"oml\", task_id = 261) ## <TaskClassif:credit-g> (1000 x 21) ## * Target: class ## * Properties: twoclass ## * Features (20): ##   - fct (13): checking_status, credit_history, employment, ##     foreign_worker, housing, job, other_parties, other_payment_plans, ##     own_telephone, personal_status, property_magnitude, purpose, ##     savings_status ##   - int (7): age, credit_amount, duration, existing_credits, ##     installment_commitment, num_dependents, residence_since rsmp(\"oml\", task_id = 261) ## <ResamplingCustom>: Custom Splits ## * Iterations: 1 ## * Instantiated: TRUE ## * Parameters: list()"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"flows-and-runs","dir":"Articles","previous_headings":"mlr3oml > OpenML Objects","what":"Flows and Runs","title":"Getting Started","text":"can access flow ID 1068 shown : Flows themself become interesting applied task, result OpenML run. example, run ID 169061 contains result applying flow task 261 : result experiment predictions, well evaluation predictions. OpenML runs can converted mlr3::ResampleResults using as_resample_result() function.","code":"flow = OMLFlow$new(id = 1068) # is the same as flow = oflw(id = 1068) flow ## <OMLFlow:1068> ##  * Name: weka.J48 ##  * Dependencies: Weka_3.7.12 run = OMLRun$new(id = 169061) # is the same as run = orn(id = 169061) run ## <OMLRun:169061> ##  * Task: credit-g (id: 261) ##  * Flow: weka.J48 (id: 1068) ##  * Estimation: holdout (id: 6; test size: 33%) # the corresponding flow and and task can be accessed directly run$flow ## <OMLFlow:1068> ##  * Name: weka.J48 ##  * Dependencies: Weka_3.7.12 run$task ## <OMLTask:261> ##  * Type: Supervised Classification ##  * Data: credit-g (id: 31; dim: 1000x21) ##  * Target: class ##  * Estimation: holdout (id: 6; test size: 33%) head(run$prediction) ##    repeat.  fold row_id confidence.good confidence.bad prediction correct ##      <int> <int>  <int>           <num>          <num>     <fctr>  <fctr> ## 1:       0     0    490        0.920000       0.080000       good    good ## 2:       0     0    539        0.885714       0.114286       good    good ## 3:       0     0    694        0.920000       0.080000       good    good ## 4:       0     0    646        0.727273       0.272727       good    good ## 5:       0     0    150        0.727273       0.272727       good    good ## 6:       0     0    970        0.166667       0.833333        bad    good head(run$evaluation) ##                             name     value        array_data repeat  fold ##                           <char>     <num>            <list> <char> <int> ## 1:          area_under_roc_curve  0.657856 0.657856,0.657856   <NA>    NA ## 2:                  average_cost  0.000000                NA   <NA>    NA ## 3:                     f_measure  0.705442 0.795745,0.494737   <NA>    NA ## 4:                         kappa  0.290990                NA   <NA>    NA ## 5: kb_relative_information_score 53.759911                NA   <NA>    NA ## 6:           mean_absolute_error  0.342722                NA   <NA>    NA rr = as_resample_result(run) rr ## <ResampleResult> with 2 resampling iterations ##   task_id learner_id resampling_id iteration warnings errors ##  credit-g   oml.1068        custom         1        0      0 ##  credit-g   oml.1068        custom         1        0      0"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"collection","dir":"Articles","previous_headings":"mlr3oml > OpenML Objects","what":"Collection","title":"Getting Started","text":", access OpenML-CC18, curated collection 72 OpenML classification tasks, .e. task collection. ids tasks datasets contained benchmarking suite can accessed fields $task_ids $data_ids respectively. can, e.g., create mlr3::Task first tasks follows:","code":"cc18 = OMLCollection$new(id = 99) # is the same as cc18 = ocl(id = 99) # the first 10 task ids cc18$task_ids[1:10] ##  [1]  3  6 11 12 14 15 16 18 22 23 # the first 10 data ids cc18$data_ids[1:10] ##  [1]  3  6 11 12 14 15 16 18 22 23 task1 = tsk(\"oml\", task_id = cc18$task_ids[1]) task1 ## <TaskClassif:kr-vs-kp> (3196 x 37) ## * Target: class ## * Properties: twoclass ## * Features (36): ##   - fct (36): bkblk, bknwy, bkon8, bkona, bkspr, bkxbq, bkxcr, bkxwp, ##     blxwp, bxqsq, cntxt, dsopp, dwipd, hdchk, katri, mulch, qxmsq, ##     r2ar8, reskd, reskr, rimmx, rkxwp, rxmsq, simpl, skach, skewr, ##     skrxp, spcop, stlmt, thrsk, wkcti, wkna8, wknck, wkovl, wkpos, ##     wtoeg"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"sec-listing","dir":"Articles","previous_headings":"mlr3oml","what":"Listing","title":"Getting Started","text":"showed work objects known IDs, another important question find relevant IDs. can either achieved OpenML website REST API. access latter, mlr3oml provides following listing functions: list_oml_data() - Find datasets list_oml_tasks() - Find tasks list_oml_flows() - Find flows list_oml_runs() - Find runs example, show usage first function, others work analogously. can, example, subset datasets contained CC-18 even . , select datasets 0 10 features. Note possible property specifications can directly queried OpenML. resulting tables data.tables containing information datasets, can filtered using usual data.table syntax.","code":"cc18_filtered = list_oml_tasks(   data_id = cc18$data_ids,   number_features = c(0, 10) ) cc18_filtered[1:5, c(\"task_id\", \"name\")] ##    task_id                name ##      <int>              <char> ## 1:      11       balance-scale ## 2:      15            breast-w ## 3:      18 mfeat-morphological ## 4:      23                 cmc ## 5:      37            diabetes"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"uploading","dir":"Articles","previous_headings":"mlr3oml","what":"Uploading","title":"Getting Started","text":"can currently upload datasets OpenML create tasks collections using functions: publish_data() upload dataset, publish_task() create task, publish_collection() create collection. , need API key.","code":""},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"api-key","dir":"Articles","previous_headings":"mlr3oml","what":"API Key","title":"Getting Started","text":"download operations supported package work without API key, might get rate limited without API key. uploading OpenML, need API key. API key can specified via option mlr3oml.api_key environment variable OPENMLAPIKEY (former precedence latter). obtain API key, must create account OpenML.","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"logging","dir":"Articles","previous_headings":"mlr3oml > Further Aspects","what":"Logging","title":"Getting Started","text":"mlr3oml logger, can accessed using lgr::get_logger(\"mlr3oml\"). information logging general (chaning logging threshold), refer corresponding section mlr3book.","code":""},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"laziness","dir":"Articles","previous_headings":"mlr3oml > Further Aspects","what":"Laziness","title":"Getting Started","text":"objects accessed mlr3oml must downloaded OpenML server. done lazily, means data downloaded actually accessed. show , change logging level, previously set \"warn\" (keep output clean), \"info\". download information associated object, $download() method can called. can useful ensure information available offline. case, actual underlying data downloaded, everything else already implicityly accessed .","code":"logger = lgr::get_logger(\"mlr3oml\") logger$set_threshold(\"info\")  oml_data = odt(31) # to print the object, some meta data must be downloaded oml_data ## INFO  [17:32:30.118] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/31`, authenticated: `FALSE`} ## INFO  [17:32:30.316] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/qualities/31`, authenticated: `FALSE`} ## INFO  [17:32:30.497] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/features/31`, authenticated: `FALSE`} ## <OMLData:31:credit-g> (1000x21) ##  * Default target: class oml_data$download() ## INFO  [17:32:30.738] Retrieving ARFF {url: `https://api.openml.org/data/v1/download/31/credit-g.arff`, authenticated: `FALSE`}"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"caching","dir":"Articles","previous_headings":"mlr3oml > Further Aspects","what":"Caching","title":"Getting Started","text":"Caching OpenML objects can enabled setting mlr3oml.cache option either TRUE FALSE (default), specific folder used cache directory. enabled, many OpenML objects also available offline. Note OpenML collections cached, IDs can added removed.","code":"# Set a temporary directy as the cache folder cache_dir = tempfile() options(mlr3oml.cache = cache_dir)  odata = odt(31) odata ## INFO  [17:32:31.186] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/31`, authenticated: `FALSE`} ## INFO  [17:32:31.356] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/qualities/31`, authenticated: `FALSE`} ## INFO  [17:32:31.528] Retrieving JSON {url: `https://www.openml.org/api/v1/json/data/features/31`, authenticated: `FALSE`} ## <OMLData:31:credit-g> (1000x21) ##  * Default target: class # When accessing the data again, nothing has to be downloaded # because the information is loaded from the cache odata_again = odt(31) odata_again ## <OMLData:31:credit-g> (1000x21) ##  * Default target: class # set back the logger logger$set_threshold(\"warn\")"},{"path":"https://mlr3oml.mlr-org.com/articles/tutorial.html","id":"data-types","dir":"Articles","previous_headings":"mlr3oml > Further Aspects","what":"Data Types","title":"Getting Started","text":"datasets OpenML available two different formats, namely arff parquet. former used default, default can changed setting mlr3oml.parquet option TRUE. also possible specify construction specific OpenML object. parquet format efficient, arff original format might therefore considered stable. Moreover, minor differences two different formats given data ID can occur, e.g. regarding data type. converting OMLData object mlr3::DataBackend using parquet file type, resulting backend mlr3db::DataBackendDuckDB object. arff file format, resulting backend mlr3::DataBackendDataTable. information data backends, see corresponding section mlr3book.","code":"library(mlr3db) odata_pq = odt(id = 31, parquet = TRUE) backend_pq = as_data_backend(odata_pq) class(backend_pq) ## [1] \"DataBackendDuckDB\" \"DataBackend\"       \"R6\" # compare with arff odata_arff = odt(id = 31, parquet = FALSE) backend_arff = as_data_backend(odata_arff) class(backend_arff) ## [1] \"DataBackendDataTable\" \"DataBackend\"          \"R6\""},{"path":"https://mlr3oml.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Lang. Author. Sebastian Fischer. Maintainer, author.","code":""},{"path":"https://mlr3oml.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang M, Fischer S (2024). mlr3oml: Connector 'mlr3' 'OpenML'. R package version 0.10.0, https://github.com/mlr-org/mlr3oml, https://mlr3oml.mlr-org.com.","code":"@Manual{,   title = {mlr3oml: Connector Between 'mlr3' and 'OpenML'},   author = {Michel Lang and Sebastian Fischer},   year = {2024},   note = {R package version 0.10.0, https://github.com/mlr-org/mlr3oml},   url = {https://mlr3oml.mlr-org.com}, }"},{"path":"https://mlr3oml.mlr-org.com/index.html","id":"mlr3oml","dir":"","previous_headings":"","what":"Connector Between mlr3 and OpenML","title":"Connector Between mlr3 and OpenML","text":"Package website: release | dev OpenML integration mlr3 ecosystem.","code":""},{"path":"https://mlr3oml.mlr-org.com/index.html","id":"what-is-mlr3oml","dir":"","previous_headings":"","what":"What is mlr3oml?","title":"Connector Between mlr3 and OpenML","text":"OpenML open-source platform facilitates sharing dissemination machine learning research data. entities platform unique identifiers standardized (meta)data can accessed via open-access REST API web interface. mlr3oml allows work REST API R integrates OpenML mlr3 ecosystem. Note upload options currently supported, use OpenML package package . brief demo, show access OpenML task, convert mlr3::Task associated mlr3::Resampling, conduct simple resample experiment. Besides working objects known IDs, data interest can also queried using listing functions. , search datasets 10 - 20 features, 100 10000 observations 2 classes. retrieve individual datasets, can use odt either manually construct new Task object using as_task() use data.table format.","code":"library(mlr3oml) library(mlr3)  # Download and print the OpenML task with ID 145953 oml_task = otsk(145953) oml_task ## <OMLTask:145953> ##  * Type: Supervised Classification ##  * Data: kr-vs-kp (id: 3; dim: 3196x37) ##  * Target: class ##  * Estimation: crossvalidation (id: 1; repeats: 1, folds: 10) # Access the OpenML data object on which the task is built oml_task$data ## <OMLData:3:kr-vs-kp> (3196x37) ##  * Default target: class # Convert the OpenML task to an mlr3 task and resampling task = as_task(oml_task) resampling = as_resampling(oml_task)  # Conduct a simple resample experiment rr = resample(task, lrn(\"classif.rpart\"), resampling) rr$aggregate() ## classif.ce  ##  0.0319181 odatasets = list_oml_data(   number_features = c(10, 20),   number_instances = c(100, 10000),   number_classes = 2 )  head(odatasets[, c(\"data_id\", \"name\")]) ##    data_id            name ## 1:      13   breast-cancer ## 2:      15        breast-w ## 3:      29 credit-approval ## 4:      49         heart-c ## 5:      50     tic-tac-toe ## 6:      51         heart-h odataset = odt(29)  # Dataset as data.table str(odataset$data) ## Classes 'data.table' and 'data.frame':   690 obs. of  16 variables: ##  $ A1   : Factor w/ 2 levels \"b\",\"a\": 1 2 2 1 1 1 1 2 1 1 ... ##  $ A2   : num  30.8 58.7 24.5 27.8 20.2 ... ##  $ A3   : num  0 4.46 0.5 1.54 5.62 ... ##  $ A4   : Factor w/ 4 levels \"u\",\"y\",\"l\",\"t\": 1 1 1 1 1 1 1 1 2 2 ... ##  $ A5   : Factor w/ 3 levels \"g\",\"p\",\"gg\": 1 1 1 1 1 1 1 1 2 2 ... ##  $ A6   : Factor w/ 14 levels \"c\",\"d\",\"cc\",\"i\",..: 10 9 9 10 10 7 8 3 6 10 ... ##  $ A7   : Factor w/ 9 levels \"v\",\"h\",\"bb\",\"j\",..: 1 2 2 1 1 1 2 1 2 1 ... ##  $ A8   : num  1.25 3.04 1.5 3.75 1.71 ... ##  $ A9   : Factor w/ 2 levels \"t\",\"f\": 1 1 1 1 1 1 1 1 1 1 ... ##  $ A10  : Factor w/ 2 levels \"t\",\"f\": 1 1 2 1 2 2 2 2 2 2 ... ##  $ A11  : int  1 6 0 5 0 0 0 0 0 0 ... ##  $ A12  : Factor w/ 2 levels \"t\",\"f\": 2 2 2 1 2 1 1 2 2 1 ... ##  $ A13  : Factor w/ 3 levels \"g\",\"p\",\"s\": 1 1 1 1 3 1 1 1 1 1 ... ##  $ A14  : int  202 43 280 100 120 360 164 80 180 52 ... ##  $ A15  : int  0 560 824 3 0 0 31285 1349 314 1442 ... ##  $ class: Factor w/ 2 levels \"+\",\"-\": 1 1 1 1 1 1 1 1 1 1 ... ##  - attr(*, \".internal.selfref\")=<externalptr> # Creating a new task otask = as_task(odataset) otask ## <TaskClassif:credit-approval> (690 x 16) ## * Target: class ## * Properties: twoclass ## * Features (15): ##   - fct (9): A1, A10, A12, A13, A4, A5, A6, A7, A9 ##   - int (3): A11, A14, A15 ##   - dbl (3): A2, A3, A8"},{"path":"https://mlr3oml.mlr-org.com/index.html","id":"feature-overview","dir":"","previous_headings":"","what":"Feature Overview","title":"Connector Between mlr3 and OpenML","text":"Datasets, tasks, flows, runs, collections can downloaded OpenML represented R6 classes. OpenML objects can easily converted corresponding mlr3 counterpart. Filtering OpenML objects can achieved using listing functions. Downloaded objects can cached setting mlr3oml.cache option. arff parquet filetype datasets supported. can upload datasets, tasks, collections OpenML.","code":""},{"path":"https://mlr3oml.mlr-org.com/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Connector Between mlr3 and OpenML","text":"Start reading Large-Scale Benchmarking chapter mlr3 book. package website contains getting started guide. OpenML API documentation also good resource.","code":""},{"path":"https://mlr3oml.mlr-org.com/index.html","id":"bugs-questions-feedback","dir":"","previous_headings":"","what":"Bugs, Questions, Feedback","title":"Connector Between mlr3 and OpenML","text":"mlr3oml free open source software project encourages participation feedback. issues, questions, suggestions feedback, please hesitate open “issue” GitHub page! case problems / bugs, often helpful provide “minimum working example” showcases behaviour (don’t worry bug obvious).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/as_learner.OMLFlow.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"default function creates Pseudo-Learner (used training prediction) given task type. enables conversion OpenML Runs mlr3::ResampleResults. well defined subcomponent (.e. id) can appear Flow according OpenML docs.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/as_learner.OMLFlow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"","code":"# S3 method for class 'OMLFlow' as_learner(x, task_type = NULL, ...)"},{"path":"https://mlr3oml.mlr-org.com/reference/as_learner.OMLFlow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an OpenML Flow to a mlr3 Learner — as_learner.OMLFlow","text":"x (OMLFlow) OMLFlow converted mlr3::Learner. task_type (character(1)) task type constrct pseudo-learner. information see OMLFlow. ... Additional arguments.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":null,"dir":"Reference","previous_headings":"","what":"List Data from OpenML — list_oml","title":"List Data from OpenML — list_oml","text":"function allows query data sets, tasks, flows, setups, runs, evaluation measures https://www.openml.org/search?type=data&sort=runs&status=active using simple filter criteria. find datasets specific task type, use list_oml_tasks() supports filtering according task type. Another heuristic search possible regression tasks search data sets 0 number classes, .e. specifying number_classes = 0.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Data from OpenML — list_oml","text":"","code":"list_oml_data(   data_id = NULL,   data_name = NULL,   number_instances = NULL,   number_features = NULL,   number_classes = NULL,   number_missing_values = NULL,   tag = NULL,   limit = limit_default(),   test_server = test_server_default(),   ... )  list_oml_evaluations(   run_id = NULL,   task_id = NULL,   measures = NULL,   tag = NULL,   limit = limit_default(),   test_server = test_server_default(),   ... )  list_oml_flows(   uploader = NULL,   tag = NULL,   limit = limit_default(),   test_server = test_server_default(),   ... )  list_oml_measures(test_server = test_server_default())  list_oml_runs(   run_id = NULL,   task_id = NULL,   tag = NULL,   flow_id = NULL,   limit = limit_default(),   test_server = test_server_default(),   ... )  list_oml_setups(   flow_id = NULL,   setup_id = NULL,   tag = NULL,   limit = limit_default(),   test_server = test_server_default(),   ... )  list_oml_tasks(   task_id = NULL,   data_id = NULL,   number_instances = NULL,   number_features = NULL,   number_classes = NULL,   number_missing_values = NULL,   tag = NULL,   limit = limit_default(),   test_server = test_server_default(),   type = NULL,   ... )"},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Data from OpenML — list_oml","text":"data_id (integer()) Vector data ids restrict . data_name (character(1)) Filter name data set. number_instances (integer()) Filter number instances. number_features (integer()) Filter number features. number_classes (integer()) Filter number labels target (classification tasks). number_missing_values (integer()) Filter number missing values. tag (character()) Filter tags. can provide multiple tags character vector. limit (integer()) Limit results limit records. Default value option \"mlr3oml.limit\", defaulting 5000. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set. ... () Additional (unsupported) filters, named arguments. run_id (integer()) Vector run ids restrict . task_id (integer()) Vector task ids restrict . measures (character()) Vector evaluation measures restrict . uploader (integer(1)) Filter uploader. flow_id (integer(1)) Filter flow id. setup_id (integer()) Vector setup ids restrict . type (character(1)) task type, supported values : \"clasisf\", \"regr\", \"surv\" \"clust\".","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Data from OpenML — list_oml","text":"(data.table()) results, null data.table data set matches filter criteria.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Data from OpenML — list_oml","text":"Filter values usually provided single atomic values (typically integer character). Provide numeric vector length 2 (c(l, u)) find matches range \\([l, u]\\). Note subset filters exposed . feature-complete package, see OpenML. Alternatively, can pass additional filters via ... using names official API, c.f. REST tab https://www.openml.org/apis.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List Data from OpenML — list_oml","text":"Casalicchio G, Bossek J, Lang M, Kirchhoff D, Kerschke P, Hofner B, Seibold H, Vanschoren J, Bischl B (2017). “OpenML: R Package Connect Machine Learning Platform OpenML.” Computational Statistics, 1–15. doi:10.1007/s00180-017-0742-2 . Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/list_oml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Data from OpenML — list_oml","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"Provides interface 'OpenML.org' list download machine learning data, tasks experiments. 'OpenML' objects can automatically converted 'mlr3' objects. sophisticated interface upload options, see 'OpenML' package.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":"documentation","dir":"Reference","previous_headings":"","what":"Documentation","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"Start reading Large-Scale Benchmarking chapter mlr3book.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"package adds mlr3::Task \"oml\" mlr3::Resampling \"oml\" mlr3::mlr_tasks mlr3::mlr_resamplings, respectively. former may pass either data_id task_id, latter requires task_id. Furthermore allows convert OpenML objects mlr3 objects using usual S3 generics mlr3::as_task, mlr3::as_learner, mlr3::as_resampling, mlr3::as_resample_result, mlr3::as_benchmark_result mlr3::as_data_backend. allows frictionless integration OpenML mlr3.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"mlr3oml.cache: Enables disables caching globally. set FALSE, caching disabled. set TRUE, cache directory reported R_user_dir() used. Alternatively, can specify path local file system . Default FALSE. mlr3oml.api_key: API key use. operations supported package work without API key, might get rate limited without API key. set, defaults value environment variable OPENMLAPIKEY. mlr3oml.arff_parser: ARFF parser use, defaults internal one relies data.table::fread(). Can also set \"RWeka\" parser RWeka. mlr3oml.parquet: Enables disables parquet default file format. set TRUE, parquet version datasets used default. set FALSE, arff version datasets used default. Note OpenML sever still transitioning arff parquet features work better arff. Default FALSE. mlr3oml.retries: integer defining number retries downloading data OpenML. NULL, number retries set 3. Relevant developers mlr3oml.test_server: default value whether use OpenML test server. Default FALSE. mlr3oml.test_api_key: API key use test server. set, defaults value environment variable TESTOPENMLAPIKEY.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":"logging","dir":"Reference","previous_headings":"","what":"Logging","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"lgr package used logging. change threshold, use lgr::get_logger(\"mlr3oml\")$set_threshold().","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/reference/mlr3oml-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3oml: Connector Between 'mlr3' and 'OpenML' — mlr3oml-package","text":"Maintainer: Sebastian Fischer sebf.fischer@gmail.com (ORCID) Authors: Michel Lang michellang@gmail.com (ORCID)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/ocl.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Collection Construction — ocl","title":"Syntactic Sugar for Collection Construction — ocl","text":"Creates OMLCollection instance.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/ocl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Collection Construction — ocl","text":"","code":"ocl(id, test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/ocl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Collection Construction — ocl","text":"id (integer(1)) OpenML id object. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/ocl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Collection Construction — ocl","text":"(OMLCollection)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/odt.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Data Construction — odt","title":"Syntactic Sugar for Data Construction — odt","text":"Creates OMLData instance.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/odt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Data Construction — odt","text":"","code":"odt(id, parquet = parquet_default(), test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/odt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Data Construction — odt","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/odt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Data Construction — odt","text":"(OMLData)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oflw.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Flow Construction — oflw","title":"Syntactic Sugar for Flow Construction — oflw","text":"Creates OMLFlow instance.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oflw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Flow Construction — oflw","text":"","code":"oflw(id, test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/oflw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Flow Construction — oflw","text":"id (integer(1)) OpenML id object. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oflw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Flow Construction — oflw","text":"(OMLFlow)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenML Collection — oml_collection","title":"OpenML Collection — oml_collection","text":"class collections (previously known studies) served https://www.openml.org. collection can either task collection run collection. object can also constructed using sugar function ocl(). Run Collection run collection contains runs, flows, datasets tasks. primary object runs (main_entity_type \"run\"). flows, datasets tasks used runs. Task Collection task collection (main_entity_type = \"task\") contains tasks datasets. primary object tasks (main_entity_type \"task\"). datasets used tasks. Note: Benchmark Suites OpenML also collections.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"caching","dir":"Reference","previous_headings":"","what":"Caching","title":"OpenML Collection — oml_collection","text":"collections OpenML can modified (ids can added), possible cache object.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"mlr-intergration","dir":"Reference","previous_headings":"","what":"mlr3 Intergration","title":"OpenML Collection — oml_collection","text":"Obtain list mlr3::Tasks using mlr3::as_tasks. Obtain list mlr3::Resamplings using mlr3::as_resamplings. Obtain list mlr3::Learners using mlr3::as_learners (main_entity_type \"run\"). Obtain mlr3::BenchmarkResult using mlr3::as_benchmark_result (main_entity_type \"run\").","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"OpenML Collection — oml_collection","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"OpenML Collection — oml_collection","text":"mlr3oml::OMLObject -> OMLCollection","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OpenML Collection — oml_collection","text":"desc (list()) Colllection description (meta information), downloaded converted JSON API response. parquet (logical(1)) Whether use parquet. main_entity_type (character(n)) main entity type, either \"run\" \"task\". flow_ids (integer(n)) vector containing flow ids collection. data_ids (integer(n)) vector containing data ids collection. run_ids (integer(n)) vector containing run ids collection. task_ids (integer(n)) vector containing task ids collection.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"OpenML Collection — oml_collection","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OpenML Collection — oml_collection","text":"OMLCollection$new() OMLCollection$print() OMLCollection$download() OMLCollection$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OpenML Collection — oml_collection","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection","text":"","code":"OMLCollection$new(id, test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenML Collection — oml_collection","text":"id (integer(1)) OpenML id object. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OpenML Collection — oml_collection","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection","text":"","code":"OMLCollection$print()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"method-download-","dir":"Reference","previous_headings":"","what":"Method download()","title":"OpenML Collection — oml_collection","text":"Downloads whole object offline usage.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection","text":"","code":"OMLCollection$download()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OpenML Collection — oml_collection","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenML Collection — oml_collection","text":"","code":"OMLCollection$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenML Collection — oml_collection","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_collection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenML Collection — oml_collection","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Data Sets — oml_data","title":"Interface to OpenML Data Sets — oml_data","text":"class data sets served OpenML. object can also constructed using sugar function odt().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Data Sets — oml_data","text":"mlr3::Task can obtained calling mlr3::as_task(). target column must either default target (default behaviour) one $feature_names. case target specified one $feature_names, default target added features task. mlr3::DataBackend can obtained calling mlr3::as_data_backend(). Depending selected file-type, returned backend mlr3::DataBackendDataTable (arff) mlr3db::DataBackendDuckDB (parquet). Note converted backend can contain columns beyond target features (id column ignore columns).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"name-conversion","dir":"Reference","previous_headings":"","what":"Name conversion","title":"Interface to OpenML Data Sets — oml_data","text":"Column names comply R's naming scheme renamed (see base::make.names()). means names can differ OpenML.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"file-format","dir":"Reference","previous_headings":"","what":"File Format","title":"Interface to OpenML Data Sets — oml_data","text":"datasets stored OpenML either stored (sparse) ARFF parquet. creating new OMLData object, constructor argument parquet allows switch arff parquet. Note necessarily data files available parquet. option mlr3oml.parquet can used set default. parquet TRUE available, \"arff\" used fallback.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"arff-files","dir":"Reference","previous_headings":"","what":"ARFF Files","title":"Interface to OpenML Data Sets — oml_data","text":"package comes reader ARFF files, based data.table::fread(). sparse ARFF files RWeka package installed, reader automatically falls back implementation (RWeka::read.arff()).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"parquet-files","dir":"Reference","previous_headings":"","what":"Parquet Files","title":"Interface to OpenML Data Sets — oml_data","text":"handling parquet files, rely duckdb DBI.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Data Sets — oml_data","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Data Sets — oml_data","text":"mlr3oml::OMLObject -> OMLData","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Data Sets — oml_data","text":"qualities (data.table()) Data set qualities (performance values), downloaded JSON API response converted data.table::data.table() columns \"name\" \"value\". tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. data (data.table()) Returns data (without row identifier ignore id columns). features (data.table()) Information data set features (including target), downloaded JSON API response converted data.table::data.table() columns: \"index\" (integer()): Column position. \"name\" (character()): Name feature. \"data_type\" (factor()): Type feature: \"nominal\" \"numeric\". \"nominal_value\" (list()): Levels feature, NULL numeric features. \"is_target\" (logical()): TRUE target column, FALSE otherwise. \"is_ignore\" (logical()): TRUE feature ignored. Ignored features removed automatically data set. \"is_row_identifier\" (logical()): TRUE column encodes row identifier. Row identifiers removed automatically data set. \"number_of_missing_values\" (integer()): Number missing values column. target_names (character()) Name default target, extracted OpenML data set description. feature_names (character()) Name features, extracted OpenML data set description. nrow (integer()) Number observations, extracted OpenML data set qualities. ncol (integer()) Number features (including targets), extracted table data set features. excludes row identifiers ignored columns. license (character()) Returns license dataset. parquet_path (character()) Downloads parquet file (loads cache) returns path parquet file. Note also normalizes names parquet file.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Data Sets — oml_data","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Data Sets — oml_data","text":"OMLData$new() OMLData$print() OMLData$download() OMLData$quality() OMLData$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Data Sets — oml_data","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"OMLData$new(   id,   parquet = parquet_default(),   test_server = test_server_default() )"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Data Sets — oml_data","text":"Prints object. detailed printer, convert mlr3::Task via as_task().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"OMLData$print()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"method-download-","dir":"Reference","previous_headings":"","what":"Method download()","title":"Interface to OpenML Data Sets — oml_data","text":"Downloads whole object offline usage.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"OMLData$download()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"method-quality-","dir":"Reference","previous_headings":"","what":"Method quality()","title":"Interface to OpenML Data Sets — oml_data","text":"Returns value single OpenML data set quality.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"OMLData$quality(name)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data","text":"name (character(1)) Name quality extract.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Data Sets — oml_data","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"OMLData$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Data Sets — oml_data","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Data Sets — oml_data","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Flows — oml_flow","title":"Interface to OpenML Flows — oml_flow","text":"class flows served OpenML. Flows represent machine learning algorithms. object can also constructed using sugar function oflw().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Flows — oml_flow","text":"Obtain mlr3::Learner using mlr3::as_learner().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Flows — oml_flow","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Flows — oml_flow","text":"mlr3oml::OMLObject -> OMLFlow","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Flows — oml_flow","text":"parameter (data.table) parameters flow. dependencies (character()) dependencies flow. tags (character()) Returns tags object.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Flows — oml_flow","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Flows — oml_flow","text":"OMLFlow$new() OMLFlow$print() OMLFlow$download() OMLFlow$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Flows — oml_flow","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow","text":"","code":"OMLFlow$new(id, test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Flows — oml_flow","text":"id (integer(1)) OpenML id object. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Flows — oml_flow","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow","text":"","code":"OMLFlow$print()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"method-download-","dir":"Reference","previous_headings":"","what":"Method download()","title":"Interface to OpenML Flows — oml_flow","text":"Downloads whole object offline usage.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow","text":"","code":"OMLFlow$download()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Flows — oml_flow","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Flows — oml_flow","text":"","code":"OMLFlow$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Flows — oml_flow","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Flows — oml_flow","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Base Class for OpenML objects. — oml_object","title":"Abstract Base Class for OpenML objects. — oml_object","text":"OML Objects inherit class. use class directly.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract Base Class for OpenML objects. — oml_object","text":"desc (list()) Description OpenML object. cache_dir (logical(1) | character(1)) Stores location cache objects retrieved OpenML. set FALSE, caching disabled. Objects test server stored subdirectory 'test', public server stored subdirectory 'public'. package qs required caching. id (integer(1)) OpenML data id. server (character(1)) server object. man (character(1)) manual entry. name (character(1)) name object. type (character()) type OpenML object (e.g. task, run, ...). test_server (logical(1)) Whether object using test server.","code":""},{"path":[]},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Base Class for OpenML objects. — oml_object","text":"OMLObject$new() OMLObject$help() OMLObject$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Base Class for OpenML objects. — oml_object","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object","text":"","code":"OMLObject$new(id, test_server = test_server_default(), type)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Base Class for OpenML objects. — oml_object","text":"id (integer(1)) OpenML id object. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set. type (charcater()) type OpenML object (e.g. run, task, ...).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Abstract Base Class for OpenML objects. — oml_object","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object","text":"","code":"OMLObject$help()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Base Class for OpenML objects. — oml_object","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Base Class for OpenML objects. — oml_object","text":"","code":"OMLObject$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_object.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Base Class for OpenML objects. — oml_object","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Runs — oml_run","title":"Interface to OpenML Runs — oml_run","text":"class OpenML Runs, conceptually similar mlr3::ResampleResults. object can also constructed using sugar function oml_run().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"openml-integration","dir":"Reference","previous_headings":"","what":"OpenML Integration","title":"Interface to OpenML Runs — oml_run","text":"OMLTask returned accessing active field $task. OMLData returned accessing active field $data (short $task$data) OMLFlow returned accessing active field $flow. raw predictions returned accessing active field $prediction.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Runs — oml_run","text":"mlr3::ResampleResult returned calling mlr3::as_resample_result(). mlr3::Task returned calling mlr3::as_task(). mlr3::DataBackend returned calling mlr3::as_data_backend(). instantiated mlr3::Resampling returned calling mlr3::as_resampling().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Runs — oml_run","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Runs — oml_run","text":"mlr3oml::OMLObject -> OMLRun","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Runs — oml_run","text":"flow_id (integer(1)) id flow. flow (OMLFlow) OpenML Flow. tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. task_id (character(1)) id task solved run. task (OMLTask) task solved run. data_id (integer(1)) id dataset. data (OMLData)  data used run. task_type (character()) task type. parameter_setting data.table()) parameter setting run. prediction (data.table()) raw predictions run returned OpenML, standard mlr3 format. Formatted predictions accessible converting mlr3::ResampleResult via as_resample_result(). evaluation (data.table()) evaluations calculated OpenML server.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Runs — oml_run","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Runs — oml_run","text":"OMLRun$new() OMLRun$print() OMLRun$download() OMLRun$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Runs — oml_run","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run","text":"","code":"OMLRun$new(   id,   parquet = parquet_default(),   test_server = test_server_default() )"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Runs — oml_run","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Runs — oml_run","text":"Prints object.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run","text":"","code":"OMLRun$print()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"method-download-","dir":"Reference","previous_headings":"","what":"Method download()","title":"Interface to OpenML Runs — oml_run","text":"Downloads whole object offline usage.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run","text":"","code":"OMLRun$download()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Runs — oml_run","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Runs — oml_run","text":"","code":"OMLRun$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Runs — oml_run","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Runs — oml_run","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to OpenML Tasks — oml_task","title":"Interface to OpenML Tasks — oml_task","text":"class tasks served OpenML. consists dataset meta-information target variable supervised problems. object can also constructed using sugar function otsk().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"mlr-integration","dir":"Reference","previous_headings":"","what":"mlr3 Integration","title":"Interface to OpenML Tasks — oml_task","text":"Obtain mlr3::Task calling as_task(). Obtain mlr3::Resampling calling as_resampling().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interface to OpenML Tasks — oml_task","text":"Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014). “OpenML.” ACM SIGKDD Explorations Newsletter, 15(2), 49–60. doi:10.1145/2641190.2641198 .","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Interface to OpenML Tasks — oml_task","text":"mlr3oml::OMLObject -> OMLTask","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Interface to OpenML Tasks — oml_task","text":"estimation_procedure (list()) estimation procedure, returns NULL none available. task_splits (data.table()) data.table containing splits provided OpenML. tags (character()) Returns tags object. parquet (logical(1)) Whether use parquet. name (character(1)) Name task, extracted task description. task_type (character(1)) OpenML task type. data_id (integer()) Data id, extracted task description. data (OMLData) Access underlying OpenML data set via OMLData object. nrow (integer()) Number rows, extracted OMLData object. ncol (integer()) Number columns, extracted OMLData object. target_names (character()) Name targets, extracted OpenML task description. feature_names (character()) Name features (without targets OMLTask). data_name (character()) Name dataset (inferred task name).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interface to OpenML Tasks — oml_task","text":"mlr3oml::OMLObject$help()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interface to OpenML Tasks — oml_task","text":"OMLTask$new() OMLTask$print() OMLTask$download() OMLTask$clone()","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interface to OpenML Tasks — oml_task","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task","text":"","code":"OMLTask$new(   id,   parquet = parquet_default(),   test_server = test_server_default() )"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Tasks — oml_task","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Interface to OpenML Tasks — oml_task","text":"Prints object. detailed printer, convert mlr3::Task via $task.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task","text":"","code":"OMLTask$print()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"method-download-","dir":"Reference","previous_headings":"","what":"Method download()","title":"Interface to OpenML Tasks — oml_task","text":"Downloads whole object offline usage.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task","text":"","code":"OMLTask$download()"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interface to OpenML Tasks — oml_task","text":"objects class cloneable method.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to OpenML Tasks — oml_task","text":"","code":"OMLTask$clone(deep = FALSE)"},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to OpenML Tasks — oml_task","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/oml_task.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to OpenML Tasks — oml_task","text":"","code":"# For technical reasons, examples cannot be included in this R package. # Instead, these are some relevant resources: # # Large-Scale Benchmarking chapter in the mlr3book: # https://mlr3book.mlr-org.com/chapters/chapter11/large-scale_benchmarking.html # # Package Article: # https://mlr3oml.mlr-org.com/articles/tutorial.html"},{"path":"https://mlr3oml.mlr-org.com/reference/orn.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Run Construction — orn","title":"Syntactic Sugar for Run Construction — orn","text":"Creates OMLRun instance.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/orn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Run Construction — orn","text":"","code":"orn(id, parquet = parquet_default(), test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/orn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Run Construction — orn","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/orn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Run Construction — orn","text":"(OMLRun)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/otsk.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Task Construction — otsk","title":"Syntactic Sugar for Task Construction — otsk","text":"Creates OMLTask instance.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/otsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Task Construction — otsk","text":"","code":"otsk(id, parquet = parquet_default(), test_server = test_server_default())"},{"path":"https://mlr3oml.mlr-org.com/reference/otsk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Task Construction — otsk","text":"id (integer(1)) OpenML id object. parquet (logical(1)) Whether use parquet instead arff. parquet available, fall back arff. Defaults value option \"mlr3oml.parquet\" FALSE set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/otsk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Task Construction — otsk","text":"(OMLTask)","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_collection.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish a Collection to OpenML — publish_collection","title":"Publish a Collection to OpenML — publish_collection","text":"Publish collection OpenML can also achieved website.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_collection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish a Collection to OpenML — publish_collection","text":"","code":"publish_collection(   ids,   name,   desc,   main_entity_type = \"task\",   alias = NULL,   api_key = NULL,   test_server = test_server_default() )"},{"path":"https://mlr3oml.mlr-org.com/reference/publish_collection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish a Collection to OpenML — publish_collection","text":"ids (integer()) IDs include collection. Depending main entity tupe, can task run IDs. name (character(1)) name collection. desc (character(1)) description collection. main_entity_type (character(1)) main entity type collection. Can either \"task\" \"run\". alias (character(1)) alias collection. api_key (character(1)) API key perform action, left NULL first tries \"mlr3oml.api_key\" R option environment variable OPENMLAPIKEY. case test_server TRUE (relevant developers) test server API key used, .e. first option \"mlr3oml.test_api_key\" environment variable TESTOPENMLAPIKEY. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload data to OpenML — publish_data","title":"Upload data to OpenML — publish_data","text":"Upload dataset OpenML. can also achieved website.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload data to OpenML — publish_data","text":"","code":"publish_data(   data,   name,   desc,   license = NULL,   default_target = NULL,   citation = NULL,   row_identifier = NULL,   ignore_attribute = NULL,   original_data_url = NULL,   paper_url = NULL,   test_server = test_server_default(),   api_key = NULL )"},{"path":"https://mlr3oml.mlr-org.com/reference/publish_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload data to OpenML — publish_data","text":"data (data.frame()) data upload. name (character(1)) name dataset. desc (character(1)) description dataset. license (character(1)) license dataset default_target (character(1)) default target variable. citation (character(1)) cite dataset. row_identifier (character(1)) Whether columns row identifier. ignore_attribute (character(1)) columns ignore modeling. original_data_url (character(1)) URL original data set. paper_url (character(1)) URL paper describing data set. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set. api_key (character(1)) API key perform action, left NULL first tries \"mlr3oml.api_key\" R option environment variable OPENMLAPIKEY. case test_server TRUE (relevant developers) test server API key used, .e. first option \"mlr3oml.test_api_key\" environment variable TESTOPENMLAPIKEY.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish a task on OpenML — publish_task","title":"Publish a task on OpenML — publish_task","text":"Publish task OpenML. can also achieved website.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/publish_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish a task on OpenML — publish_task","text":"","code":"publish_task(   id,   type,   estimation_procedure,   target,   api_key = NULL,   test_server = test_server_default() )"},{"path":"https://mlr3oml.mlr-org.com/reference/publish_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish a task on OpenML — publish_task","text":"id (integer(1)) dataset id. type (character(1) integer(1)) Can either \"classif\" \"regr\" integer indicating task type. estimation_procedure (integer(1)) id estimation procedure. target (character(1)) target variable (applicable). api_key (character(1)) API key perform action, left NULL first tries \"mlr3oml.api_key\" R option environment variable OPENMLAPIKEY. case test_server TRUE (relevant developers) test server API key used, .e. first option \"mlr3oml.test_api_key\" environment variable TESTOPENMLAPIKEY. test_server (character(1)) Whether use OpenML test server public server. Defaults value option \"mlr3oml.test_server\", FALSE set.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/read_arff.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ARFF files — read_arff","title":"Read ARFF files — read_arff","text":"Parses file located path returns data.table(). Limitations: works dense files, support sparse data. Use RWeka instead. Dates (even time component) read POSIXct. date-format ARFF specification currently ignored. Instead, rely auto-detection data.table's fread()..","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/read_arff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ARFF files — read_arff","text":"","code":"read_arff(path)"},{"path":"https://mlr3oml.mlr-org.com/reference/read_arff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ARFF files — read_arff","text":"path (character(1)) Path URI ARFF file, passed file().","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/read_arff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ARFF files — read_arff","text":"(data.table()).","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/write_arff.html","id":null,"dir":"Reference","previous_headings":"","what":"Write ARFF files — write_arff","title":"Write ARFF files — write_arff","text":"Writes data.frame() ARFF file. Limitations: Logicals written categorical features. POSIXct columns converted UTC.","code":""},{"path":"https://mlr3oml.mlr-org.com/reference/write_arff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write ARFF files — write_arff","text":"","code":"write_arff(data, path, relation = deparse(substitute(data)))"},{"path":"https://mlr3oml.mlr-org.com/reference/write_arff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write ARFF files — write_arff","text":"data (data.frame()) Data write. path (character(1)) Path URI ARFF file, passed file(). relation (character(1)) Relation (name) data set.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-090-9000","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.9.0-9000","title":"mlr3oml 0.9.0-9000","text":"Bugfix: Caching parquet files failed temporary directory different partition cache directory feat: Add option mlr3oml.retries control number retries downloading data OpenML. default 3.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-090","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.9.0","title":"mlr3oml 0.9.0","text":"CRAN release: 2023-09-13 Fix: Parquet datasets now work columns simultaneously renamed converted. publish_data upload dataset OpenML publish_task create task OpenML publish_collection create collection OpenML","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-080","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.8.0","title":"mlr3oml 0.8.0","text":"CRAN release: 2023-07-06 Listing functions don’t return tables invisibly anymore. Address CRAN NOTE regarding unused bit64 import. Improved printer OpenML objects. Removed benchmark_grid_oml(), already deprecated release 0.7.2. Removed fields runs, flows, data, tasks OMLCollection class. Consequently, cache option can longer set OMLCollection objects, see class documentation information. Removed examples, caused problems CRAN checks OpenML unavailable. Caching can longer specified instance level globally option mlr3oml.cache Added $download() method OML objects fully download object offline usage. Incremented cache version parquet data due change OpenML. Added online tutorial package.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-072","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.7.2","title":"mlr3oml 0.7.2","text":"CRAN release: 2023-06-12 Fix: target added features converting OMLData object task explicit target variable default target. Deprecated benchmark_grid_oml() favour mlr3::benchmark_grid(..., paired = TRUE) Fix: Incremented cache version data objects int64 data types (introduced previous release). Fix: Incremented cache version data description fixed bug, make.names() applied ignore attributes. Fix bug task converter (features sometimes set correctly) Collection now shows name printer Better error message parquet dataset creation fails","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-071","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.7.1","title":"mlr3oml 0.7.1","text":"CRAN release: 2023-03-14 Fixed argument names S3 method as_data_backend comply new CRAN checks","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-070","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.7.0","title":"mlr3oml 0.7.0","text":"CRAN release: 2022-12-12 feature: Add argument task_type function list_oml_tasks(). fix: strings nominals distinguished parquet files docs: Fixed OpenML links docs: Renamed docs OpenML objects oml_data() now odt() oml_task()now otsk() oml_flow() now oflw() oml_run() now orn oml_collection() now ocl() Addresses CRAN issue: examples fail gracefully OpenML server busy.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-060","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.6.0","title":"mlr3oml 0.6.0","text":"CRAN release: 2022-10-12 Features Add R6 classes OMLCollection, OMLRun, OMLFlow. Added function benchmark_grid_oml allows easier creation benchmark designs OpenML task-resampling pairs. Added sugar functions oml_flow, oml_data, oml_task, oml_run, oml_collection OpenML objects. Conversion OpenML mlr3 objects now possible usual s3-converters as_<object>. improves consistency ensuring subcomponents OpenML objects always OpenML objects suddenly mlr3 objects. Added converter functions: as_learner, as_resample_result, as_data_backend, as_benchmark_result. Added support parquet files recently introduced OpenML. global option mlr3oml.parquet can used enable disable . default FALSE. implemented via duckdb backend mlr3db. Support use OpenML test server. can globally enabled using option mlr3oml.test_server individually objects. Options globally define API-key test server environment variable TESTOPENMLAPIKEY option mlr3oml.test_api_key Fixes Removed support survival tasks mlr3proba longer CRAN OpenML tasks can now also filtered according task type Implement arff writer remove arff dependency, therefore also removing option \"farff\" mlr3oml.arff_parser Increment cache version number due changes cache structure: flush previous cache folder. Simplified code structure adding OMLObject class OpenML objects like OMLData, OMLTask inherit.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-050","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.5.0","title":"mlr3oml 0.5.0","text":"CRAN release: 2021-09-24 Support downloading survival tasks (via mlr3proba). list_oml_evaluations() list_oml_flows() list_oml_measures() list_oml_runs() list_oml_setups()","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-043","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.3","title":"mlr3oml 0.4.3","text":"CRAN release: 2021-04-16 Fixed bug regarding unquoting fields ARFF files.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-042","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.2","title":"mlr3oml 0.4.2","text":"CRAN release: 2021-02-22 set via option mlr3oml.api_key, API key retrieved environment variable OPENMLAPIKEY. Implemented retry mechanism workaround temporary connection errors.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-041","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.1","title":"mlr3oml 0.4.1","text":"CRAN release: 2021-01-27 Added heuristic detect quote char.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-040","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.4.0","title":"mlr3oml 0.4.0","text":"CRAN release: 2020-10-20 parsers ARFF files can now explicitly selected via option \"mlr3oml.arff.parser\". Default internal parser based data.table::fread(). Improved stability internal ARFF parser case malformed ARFF files non-standardized quotes.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-030","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.3.0","title":"mlr3oml 0.3.0","text":"CRAN release: 2020-10-05 connectors used mlr_tasks mlr_resamplings now signal errors class missingDefaultError defaults set. Target columns now automatically converted require storage mode task creation. Removed dependency orphaned package bibtex.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-020","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.2.0","title":"mlr3oml 0.2.0","text":"CRAN release: 2020-08-24 Support filtering data sets tasks via data id task id (#5). Added fallback RWeka sparse ARFF files (#6). Fixed import backports.","code":""},{"path":"https://mlr3oml.mlr-org.com/news/index.html","id":"mlr3oml-010","dir":"Changelog","previous_headings":"","what":"mlr3oml 0.1.0","title":"mlr3oml 0.1.0","text":"CRAN release: 2020-08-07 Initial release.","code":""}]
