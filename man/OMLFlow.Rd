% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OMLFlow.R
\name{OMLFlow}
\alias{OMLFlow}
\title{Interface to OpenML Flows}
\description{
This is the class for flows served on \href{https://www.openml.org/f}{OpenML}.
Flows are conceptually similar to \link[mlr3pipelines:mlr_learners_graph]{mlr3pipelines::GraphLearner}s.
The support for publishing learners on OpenML (as flows) is currently limited but can be
extended upon request.
}
\section{mlr3 Integration}{

\itemize{
\item Obtain a \link[mlr3:Learner]{mlr3::Learner} using \code{as_learner()}. Fore more details see \link[mlr3:as_learner]{mlr3::as_learner}.
}
}

\examples{
\donttest{
library("mlr3")
# mlr3 flow:
flow = OMLFlow$new(id = 19103L)
learner = as_learner(flow)
# python flow
python_flow = OMLFlow$new(19090L)
# conversion to pseudo Learner
plearner = as_learner(python_flow, "classif")
}
}
\references{
Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014).
\dQuote{OpenML.}
\emph{ACM SIGKDD Explorations Newsletter}, \bold{15}(2), 49--60.
\doi{10.1145/2641190.2641198}.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML flow id.}

\item{\code{cache_dir}}{(\code{logical(1)} | \code{character(1)})\cr
Stores the location of the cache for objects retrieved from \url{https://openml.org}.
If set to \code{FALSE}, caching is disabled.

The package \CRANpkg{qs} is required for caching.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{desc}}{(\code{list()})\cr
The description as downloaded from OpenML.}

\item{\code{parameters}}{(\code{data.table})\cr
The parameters of the flow.}

\item{\code{tags}}{(\code{character()})\cr
The tags of the flow.}

\item{\code{dependencies}}{(\code{character()})\cr
The dependencies of the flow.}

\item{\code{name}}{(\code{character(1)})\cr
The name of the flow.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OMLFlow$new()}}
\item \href{#method-print}{\code{OMLFlow$print()}}
\item \href{#method-clone}{\code{OMLFlow$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new object of class \link{OMLFlow}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLFlow$new(id, cache = getOption("mlr3oml.cache", FALSE))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{integeger(1)}) The id of the Flow}

\item{\code{cache}}{(\code{logical(1)}) whether to use caching.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLFlow$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLFlow$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
