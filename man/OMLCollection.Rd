% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OMLCollection.R
\name{OMLCollection}
\alias{OMLCollection}
\title{OpenML Collection}
\description{
This is the class for collections (previously known as studies) served on
\url{https://openml.org/search?type=study&study_type=task&sort=tasks_included}.
It is used both for Run Collections and Task Collections.
(Note that all Benchmark Suites on OpenML are also Collections).
A Run Collection (\code{main_entity_type = "run"}) contains runs, flows, datasets and tasks.
A Task Collection (\code{main_entity_type = "task"}) contains tasks and datasets.
}
\section{mlr3 Intergration}{

\itemize{
\item Obtain a list of \link[mlr3:Task]{mlr3::Task}s using \code{as_tasks()}.
\item Obtain a list of \link[mlr3:Resampling]{mlr3::Resampling}s using \code{as_resamplings()}.
\item Obtain a list of \link[mlr3:Learner]{mlr3::Learner}s using \code{as_learners()} (if main_entity_type is "run").
\item Obtain a \link[mlr3:BenchmarkResult]{mlr3::BenchmarkResult} using \code{as_benchmark_result()} (if main_entity_type is "run").
}
}

\examples{
\donttest{
library("mlr3")
# OpenML Run Collection:
collection = OMLCollection$new(232L)
collection$tasks
collection$data
collection$flows
collection$runs

# mlr3 conversion:
tasks = as_tasks(collection)
resamplings = as_resamplings(collection)
# construct pseudo-learners as these are sklearn flows
learners = as_learners(collection, "classif")

# Although pseudo-learners are non-executable the runs can still be analyzed.
bmr = as_benchmark_result(collection)
bmr$score(msr("classif.ce"))
}
}
\references{
Vanschoren J, van Rijn JN, Bischl B, Torgo L (2014).
\dQuote{OpenML.}
\emph{ACM SIGKDD Explorations Newsletter}, \bold{15}(2), 49--60.
\doi{10.1145/2641190.2641198}.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML collection id.}

\item{\code{cache_dir}}{(\code{logical(1)} | \code{character(1)})\cr
Stores the location of the cache for objects retrieved from \url{https://openml.org}.
If set to \code{FALSE}, caching is disabled.

The package \CRANpkg{qs} is required for caching.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{desc}}{(\code{list()})\cr
Colllection description (meta information), downloaded and converted from the JSON API response.}

\item{\code{name}}{(\code{character(1)}) \cr
The name of the collection.}

\item{\code{tags}}{(\code{character(n)})\cr
The tags of the OpenML collection.}

\item{\code{main_entity_type}}{(\code{character(1)})\cr
The main entity type of the collection (either "run" or "task").}

\item{\code{flow_ids}}{(\code{integer(n)})\cr
An vector containing the flow ids of the collection.}

\item{\code{data_ids}}{(\code{integer(n)})\cr
An vector containing the data ids of the collection.}

\item{\code{run_ids}}{(\code{integer(n)})\cr
An vector containing the run ids of the collection.}

\item{\code{task_ids}}{(\code{integer(n)})\cr
An vector containing the task ids of the collection.}

\item{\code{runs}}{(\code{data.table()})
A data.table summarizing the runs included in the collection. Returns NULL for
Task Collections.}

\item{\code{flows}}{(\code{data.table()})
A data.table summarizing the flows included in the collection. Returns NULL for
Task Collections.}

\item{\code{data}}{(\code{data.table()})
A data.table summarizing the datasets included in the collection.}

\item{\code{tasks}}{(\code{data.table()})
A data.table summarizing the tasks included in the collection.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OMLCollection$new()}}
\item \href{#method-print}{\code{OMLCollection$print()}}
\item \href{#method-clone}{\code{OMLCollection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new object of class \code{OMLCollection}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$new(id, cache = getOption("mlr3oml.cache", FALSE))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{integer(1)})\cr
OpenML run id.}

\item{\code{cache}}{(\code{logical(1)} | \code{character(1)})\cr
See field \code{cache} for an explanation of possible values.
Defaults to value of option \code{"mlr3oml.cache"}, or \code{FALSE} if not set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLCollection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
