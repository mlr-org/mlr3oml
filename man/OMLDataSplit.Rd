% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OMLDataSplit.R
\name{OMLDataSplit}
\alias{OMLDataSplit}
\title{Interface to OpenML Splits}
\description{
This is the class for OpenML splits that belong to task.
Note that the percentage in holdout is inverse to the ratio in mlr3.
}
\section{mlr3Intergration}{

\itemize{
\item Obtain a (instantiated) \link[mlr3:Resampling]{mlr3::Resampling} object by calling \code{as_resampling()}.
}
}

\examples{
\donttest{
library("mlr3")
otask = OMLTask$new(31L)
data_split = otask$data_split
data_split$type
resampling = as_resampling(data_split)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{task_id}}{(\code{integer(1)})
The id of the task to which the evaluation procedure belongs.}

\item{\code{task}}{(\code{OMLTask}) to which the evaluation procedure belongs.}

\item{\code{cache_dir}}{(\code{logical(1)} | \code{character(1)})\cr
Stores the location of the cache for objects retrieved from \url{https://openml.org}.
If set to \code{FALSE}, caching is disabled.

The package \CRANpkg{qs} is required for caching.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{type}}{(\code{character(1)})\cr
The type of the estimation procedure.}

\item{\code{parameters}}{(\code{list()})\cr
List of Parameters for the Estimation Procedure.}

\item{\code{splits}}{(\code{data.table()})\cr
A data.table containing the splits as provided by OpenML.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OMLDataSplit$new()}}
\item \href{#method-print}{\code{OMLDataSplit$print()}}
\item \href{#method-clone}{\code{OMLDataSplit$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes an  instance of class OMLDataSplit Requires either
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLDataSplit$new(
  task = NULL,
  task_id = NULL,
  cache = getOption("mlr3oml.cache", FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{(`OMLTask) Either the OpenML Task or task_id have to be provided.}

\item{\code{task_id}}{(\code{integer(1)}) The OpenML task ID (if no task is provided).}

\item{\code{cache}}{(\code{logical(1)} | \code{character(1)})\cr
See field \code{cache} for an explanation of possible values.
Defaults to value of option \code{"mlr3oml.cache"}, or \code{FALSE} if not set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLDataSplit$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OMLDataSplit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
